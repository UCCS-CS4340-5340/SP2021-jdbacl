/*
 * This file was automatically generated by EvoSuite
 */

package org.databene.jdbacl.proxy;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.sql.SQLException;
import java.sql.Statement;
import org.databene.jdbacl.proxy.LoggingStatementHandler;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class TestLoggingStatementHandler {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      LoggingStatementHandler.getOpenStatementCount();
  }

  @Test
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try {
        LoggingStatementHandler.assertAllStatementsClosed(true);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      LoggingStatementHandler loggingStatementHandler0 = new LoggingStatementHandler((Statement) null, false);
      assertNotNull(loggingStatementHandler0);
      
      int[] intArray0 = new int[1];
      // Undeclared exception!
      try {
        loggingStatementHandler0.executeUpdate("C}~B&", intArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      LoggingStatementHandler loggingStatementHandler0 = new LoggingStatementHandler((Statement) null, false);
      assertNotNull(loggingStatementHandler0);
      
      // Undeclared exception!
      try {
        loggingStatementHandler0.executeUpdate("", 21);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      LoggingStatementHandler loggingStatementHandler0 = new LoggingStatementHandler((Statement) null, false);
      assertNotNull(loggingStatementHandler0);
      
      // Undeclared exception!
      try {
        loggingStatementHandler0.execute("Statement (null)", 990);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      LoggingStatementHandler loggingStatementHandler0 = new LoggingStatementHandler((Statement) null, false);
      assertNotNull(loggingStatementHandler0);
      
      // Undeclared exception!
      try {
        loggingStatementHandler0.executeUpdate("o");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      LoggingStatementHandler loggingStatementHandler0 = new LoggingStatementHandler((Statement) null, false);
      assertNotNull(loggingStatementHandler0);
      
      int[] intArray0 = new int[6];
      // Undeclared exception!
      try {
        loggingStatementHandler0.execute("", intArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
      LoggingStatementHandler loggingStatementHandler0 = new LoggingStatementHandler((Statement) null, false);
      assertNotNull(loggingStatementHandler0);
      
      String[] stringArray0 = new String[7];
      // Undeclared exception!
      try {
        loggingStatementHandler0.execute("Statement (null)", stringArray0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test8()  throws Throwable  {
      LoggingStatementHandler loggingStatementHandler0 = new LoggingStatementHandler((Statement) null, true);
      assertNotNull(loggingStatementHandler0);
      
      // Undeclared exception!
      try {
        loggingStatementHandler0.executeQuery("");
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * Tried to mutate a database with read-only settings: 
         */
      }
  }

  @Test
  public void test9()  throws Throwable  {
      LoggingStatementHandler loggingStatementHandler0 = new LoggingStatementHandler((Statement) null, false);
      assertNotNull(loggingStatementHandler0);
      
      // Undeclared exception!
      try {
        loggingStatementHandler0.executeBatch();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test10()  throws Throwable  {
      LoggingStatementHandler loggingStatementHandler0 = new LoggingStatementHandler((Statement) null, true);
      assertNotNull(loggingStatementHandler0);
      
      String[] stringArray0 = new String[7];
      // Undeclared exception!
      try {
        loggingStatementHandler0.executeUpdate("ty$w3}@e", stringArray0);
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * Tried to mutate a database with read-only settings: ty$w3}@e
         */
      }
  }

  @Test
  public void test11()  throws Throwable  {
      LoggingStatementHandler loggingStatementHandler0 = new LoggingStatementHandler((Statement) null, false);
      assertNotNull(loggingStatementHandler0);
      
      // Undeclared exception!
      try {
        loggingStatementHandler0.execute("AT6J(M");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test12()  throws Throwable  {
      LoggingStatementHandler loggingStatementHandler0 = new LoggingStatementHandler((Statement) null, false);
      assertNotNull(loggingStatementHandler0);
      
      String string0 = loggingStatementHandler0.toString();
      assertEquals(267, loggingStatementHandler0.getOpenStatementCount());
      assertEquals("Statement (null)", string0);
  }

  @Test
  public void test13()  throws Throwable  {
      LoggingStatementHandler loggingStatementHandler0 = new LoggingStatementHandler((Statement) null, false);
      assertNotNull(loggingStatementHandler0);
      
      // Undeclared exception!
      try {
        loggingStatementHandler0.close();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test14()  throws Throwable  {
      LoggingStatementHandler.resetMonitors();
  }
}
