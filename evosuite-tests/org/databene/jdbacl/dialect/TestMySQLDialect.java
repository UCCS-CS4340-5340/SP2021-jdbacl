/*
 * This file was automatically generated by EvoSuite
 */

package org.databene.jdbacl.dialect;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.databene.jdbacl.dialect.MySQLDialect;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class TestMySQLDialect {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      MySQLDialect mySQLDialect0 = new MySQLDialect();
      mySQLDialect0.supportsRegex();
  }

  @Test
  public void test1()  throws Throwable  {
      MySQLDialect mySQLDialect0 = new MySQLDialect();
      boolean boolean0 = mySQLDialect0.isDeterministicUKName("*mg@1g<o+QnaY}[p{z");
      assertEquals(true, boolean0);
  }

  @Test
  public void test2()  throws Throwable  {
      MySQLDialect mySQLDialect0 = new MySQLDialect();
      boolean boolean0 = mySQLDialect0.isDefaultSchema("", "");
      assertEquals(false, boolean0);
  }

  @Test
  public void test3()  throws Throwable  {
      MySQLDialect mySQLDialect0 = new MySQLDialect();
      boolean boolean0 = mySQLDialect0.isDeterministicIndexName("");
      assertEquals(true, boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      MySQLDialect mySQLDialect0 = new MySQLDialect();
      boolean boolean0 = mySQLDialect0.isDeterministicFKName(")L12T");
      assertEquals(true, boolean0);
  }

  @Test
  public void test5()  throws Throwable  {
      MySQLDialect mySQLDialect0 = new MySQLDialect();
      boolean boolean0 = mySQLDialect0.isDeterministicPKName("hsqldb.raf_buffer_scale");
      assertEquals(true, boolean0);
  }

  @Test
  public void test6()  throws Throwable  {
      MySQLDialect mySQLDialect0 = new MySQLDialect();
      boolean boolean0 = mySQLDialect0.isDefaultCatalog("", "");
      assertEquals(false, boolean0);
  }

  @Test
  public void test7()  throws Throwable  {
      MySQLDialect mySQLDialect0 = new MySQLDialect();
      String string0 = mySQLDialect0.regexQuery("hsqldb.raf_buffer_scale", false, "hsqldb.raf_buffer_scale");
      assertEquals("hsqldb.raf_buffer_scale REGEXP 'hsqldb.raf_buffer_scale'", string0);
      assertNotNull(string0);
  }

  @Test
  public void test8()  throws Throwable  {
      MySQLDialect mySQLDialect0 = new MySQLDialect();
      String string0 = mySQLDialect0.regexQuery("", true, "");
      assertEquals(" NOT REGEXP ''", string0);
      assertNotNull(string0);
  }
}
