/*
 * This file was automatically generated by EvoSuite
 */

package org.databene.jdbacl.identity.mem;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.sql.Connection;
import org.databene.commons.version.VersionNumber;
import org.databene.jdbacl.identity.IdentityModel;
import org.databene.jdbacl.identity.IdentityProvider;
import org.databene.jdbacl.identity.SubNkPkQueryIdentity;
import org.databene.jdbacl.identity.UniqueKeyIdentity;
import org.databene.jdbacl.identity.mem.MemKeyMapper;
import org.databene.jdbacl.model.Database;
import org.databene.jdbacl.model.DefaultDatabase;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class TestMemKeyMapper {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      IdentityProvider identityProvider0 = new IdentityProvider();
      VersionNumber versionNumber0 = VersionNumber.valueOf("");
      DefaultDatabase defaultDatabase0 = new DefaultDatabase("", "", versionNumber0);
      MemKeyMapper memKeyMapper0 = new MemKeyMapper((Connection) null, "", (Connection) null, "", identityProvider0, (Database) defaultDatabase0);
      String[] stringArray0 = new String[7];
      SubNkPkQueryIdentity subNkPkQueryIdentity0 = new SubNkPkQueryIdentity("", stringArray0, identityProvider0);
      // Undeclared exception!
      try {
        memKeyMapper0.getTargetPK("", (IdentityModel) subNkPkQueryIdentity0, (Object) versionNumber0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      MemKeyMapper memKeyMapper0 = new MemKeyMapper((Connection) null, "'`", (Connection) null, "'`", (IdentityProvider) null, (Database) null);
      String[] stringArray0 = new String[3];
      UniqueKeyIdentity uniqueKeyIdentity0 = new UniqueKeyIdentity("'`", stringArray0);
      // Undeclared exception!
      try {
        memKeyMapper0.getTargetPK((IdentityModel) uniqueKeyIdentity0, "'`");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      MemKeyMapper memKeyMapper0 = new MemKeyMapper((Connection) null, "w\"&K(zT|)j", (Connection) null, "w\"&K(zT|)j", (IdentityProvider) null, (Database) null);
      String[] stringArray0 = new String[4];
      UniqueKeyIdentity uniqueKeyIdentity0 = new UniqueKeyIdentity("w\"&K(zT|)j", stringArray0);
      // Undeclared exception!
      try {
        memKeyMapper0.store("w\"&K(zT|)j", (IdentityModel) uniqueKeyIdentity0, (String) null, (Object) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      MemKeyMapper memKeyMapper0 = new MemKeyMapper((Connection) null, "'`", (Connection) null, "'`", (IdentityProvider) null, (Database) null);
      String[] stringArray0 = new String[3];
      UniqueKeyIdentity uniqueKeyIdentity0 = new UniqueKeyIdentity("'`", stringArray0);
      memKeyMapper0.store("'`", (IdentityModel) uniqueKeyIdentity0, (String) null, (Object) "'`", (Object) "'`");
      assertEquals("'`", uniqueKeyIdentity0.getName());
  }

  @Test
  public void test4()  throws Throwable  {
      MemKeyMapper memKeyMapper0 = new MemKeyMapper((Connection) null, "#N}{.0`_Qo", (Connection) null, "#N}{.0`_Qo", (IdentityProvider) null, (Database) null);
      String[] stringArray0 = new String[9];
      SubNkPkQueryIdentity subNkPkQueryIdentity0 = new SubNkPkQueryIdentity("dj#[F", stringArray0, (IdentityProvider) null);
      // Undeclared exception!
      try {
        memKeyMapper0.getNaturalKey("dj#[F", (IdentityModel) subNkPkQueryIdentity0, (Object) null);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * Database not registered: dj#[F
         */
      }
  }

  @Test
  public void test5()  throws Throwable  {
      MemKeyMapper memKeyMapper0 = new MemKeyMapper((Connection) null, "'`", (Connection) null, "'`", (IdentityProvider) null, (Database) null);
      String[] stringArray0 = new String[3];
      UniqueKeyIdentity uniqueKeyIdentity0 = new UniqueKeyIdentity("'`", stringArray0);
      // Undeclared exception!
      try {
        memKeyMapper0.getNaturalKey("'`", (IdentityModel) uniqueKeyIdentity0, (Object) "'`");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      IdentityProvider identityProvider0 = new IdentityProvider();
      VersionNumber versionNumber0 = VersionNumber.valueOf("");
      DefaultDatabase defaultDatabase0 = new DefaultDatabase("", "", versionNumber0);
      MemKeyMapper memKeyMapper0 = new MemKeyMapper((Connection) null, "", (Connection) null, "", identityProvider0, (Database) defaultDatabase0);
      memKeyMapper0.registerSource("", (Connection) null);
  }

  @Test
  public void test7()  throws Throwable  {
      MemKeyMapper memKeyMapper0 = new MemKeyMapper((Connection) null, "#N}{.0`_Qo", (Connection) null, "#N}{.0`_Qo", (IdentityProvider) null, (Database) null);
      memKeyMapper0.registerSource("t!F''*J", (Connection) null);
  }
}
