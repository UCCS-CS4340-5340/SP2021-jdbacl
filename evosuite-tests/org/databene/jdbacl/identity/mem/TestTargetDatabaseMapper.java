/*
 * This file was automatically generated by EvoSuite
 */

package org.databene.jdbacl.identity.mem;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.sql.Connection;
import org.databene.commons.version.VersionNumber;
import org.databene.jdbacl.identity.IdentityModel;
import org.databene.jdbacl.identity.IdentityProvider;
import org.databene.jdbacl.identity.KeyMapper;
import org.databene.jdbacl.identity.NkPkQueryIdentity;
import org.databene.jdbacl.identity.UniqueKeyIdentity;
import org.databene.jdbacl.identity.mem.MemKeyMapper;
import org.databene.jdbacl.identity.mem.TargetDatabaseMapper;
import org.databene.jdbacl.model.Database;
import org.databene.jdbacl.model.DefaultDatabase;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class TestTargetDatabaseMapper {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      IdentityProvider identityProvider0 = new IdentityProvider();
      VersionNumber versionNumber0 = VersionNumber.valueOf("NgS\"vg/a");
      DefaultDatabase defaultDatabase0 = new DefaultDatabase("NgS\"vg/a", "NgS\"vg/a", versionNumber0);
      MemKeyMapper memKeyMapper0 = new MemKeyMapper((Connection) null, "NgS\"vg/a", (Connection) null, "NgS\"vg/a", identityProvider0, (Database) defaultDatabase0);
      TargetDatabaseMapper targetDatabaseMapper0 = memKeyMapper0.targetDBMapper;
      String[] stringArray0 = new String[3];
      UniqueKeyIdentity uniqueKeyIdentity0 = new UniqueKeyIdentity("NgS\"vg/a", stringArray0);
      // Undeclared exception!
      try {
        targetDatabaseMapper0.getTargetPK((IdentityModel) uniqueKeyIdentity0, "NgS\"vg/a");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      IdentityProvider identityProvider0 = new IdentityProvider();
      MemKeyMapper memKeyMapper0 = new MemKeyMapper((Connection) null, "+pX=PY;l{cYz\"]=", (Connection) null, "+pX=PY;l{cYz\"]=", identityProvider0, (Database) null);
      TargetDatabaseMapper targetDatabaseMapper0 = new TargetDatabaseMapper((KeyMapper) memKeyMapper0, (Connection) null, "+pX=PY;l{cYz\"]=", (Database) null);
      NkPkQueryIdentity nkPkQueryIdentity0 = new NkPkQueryIdentity("+pX=PY;l{cYz\"]=", "+pX=PY;l{cYz\"]=");
      targetDatabaseMapper0.store((IdentityModel) nkPkQueryIdentity0, "+pX=PY;l{cYz\"]=", (Object) "+pX=PY;l{cYz\"]=");
      targetDatabaseMapper0.getNaturalKey((IdentityModel) nkPkQueryIdentity0, (Object) "+pX=PY;l{cYz\"]=");
  }

  @Test
  public void test2()  throws Throwable  {
      IdentityProvider identityProvider0 = new IdentityProvider();
      MemKeyMapper memKeyMapper0 = new MemKeyMapper((Connection) null, "+pX=PY;l{cYz\"]=", (Connection) null, "+pX=PY;l{cYz\"]=", identityProvider0, (Database) null);
      TargetDatabaseMapper targetDatabaseMapper0 = new TargetDatabaseMapper((KeyMapper) memKeyMapper0, (Connection) null, "+pX=PY;l{cYz\"]=", (Database) null);
      NkPkQueryIdentity nkPkQueryIdentity0 = new NkPkQueryIdentity("+pX=PY;l{cYz\"]=", "+pX=PY;l{cYz\"]=");
      // Undeclared exception!
      try {
        targetDatabaseMapper0.getNaturalKey((IdentityModel) nkPkQueryIdentity0, (Object) "+pX=PY;l{cYz\"]=");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      IdentityProvider identityProvider0 = new IdentityProvider();
      MemKeyMapper memKeyMapper0 = new MemKeyMapper((Connection) null, "BITOR", (Connection) null, "BITOR", identityProvider0, (Database) null);
      TargetDatabaseMapper targetDatabaseMapper0 = memKeyMapper0.targetDBMapper;
      String string0 = targetDatabaseMapper0.getDbId();
      assertEquals("BITOR", string0);
  }
}
