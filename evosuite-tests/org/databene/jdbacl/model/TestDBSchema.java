/*
 * This file was automatically generated by EvoSuite
 */

package org.databene.jdbacl.model;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.List;
import org.databene.jdbacl.model.DBCatalog;
import org.databene.jdbacl.model.DBObject;
import org.databene.jdbacl.model.DBPackage;
import org.databene.jdbacl.model.DBSchema;
import org.databene.jdbacl.model.DBSequence;
import org.databene.jdbacl.model.DBTable;
import org.databene.jdbacl.model.DBTrigger;
import org.databene.jdbacl.model.Database;
import org.databene.jdbacl.model.DefaultDBTable;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class TestDBSchema {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog("VY;MSWT?.i4lVa");
      DBSchema dBSchema0 = new DBSchema("VY;MSWT?.i4lVa", dBCatalog0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("", dBSchema0);
      DBCatalog dBCatalog1 = defaultDBTable0.getCatalog();
      assertEquals("VY;MSWT?.i4lVa", dBCatalog1.toString());
  }

  @Test
  public void test1()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("4");
      List<DBSequence> list0 = dBSchema0.getSequences(false);
      assertEquals(0, list0.size());
  }

  @Test
  public void test2()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog("VY;MSWT?.i4lVa");
      DBSchema dBSchema0 = new DBSchema("VY;MSWT?.i4lVa", dBCatalog0);
      List<DBTable> list0 = dBSchema0.getTables(true);
      assertEquals(true, list0.isEmpty());
  }

  @Test
  public void test3()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog("VY;MSWT?.i4lVa");
      DBSchema dBSchema0 = new DBSchema("VY;MSWT?.i4lVa", dBCatalog0);
      dBSchema0.setCatalog(dBCatalog0);
      assertEquals("VY;MSWT?.i4lVa", dBSchema0.getName());
  }

  @Test
  public void test4()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      dBSchema0.removeTable((DBTable) defaultDBTable0);
      assertEquals(0, defaultDBTable0.countProviders());
  }

  @Test
  public void test5()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("4");
      DBTrigger dBTrigger0 = new DBTrigger("4", dBSchema0);
      assertNull(dBTrigger0.getTableName());
  }

  @Test
  public void test6()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog("VY;MSWT?.i4lVa");
      DBSchema dBSchema0 = new DBSchema("VY;MSWT?.i4lVa", dBCatalog0);
      List<DBTrigger> list0 = dBSchema0.getTriggers();
      assertEquals(true, list0.isEmpty());
  }

  @Test
  public void test7()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("4");
      // Undeclared exception!
      try {
        dBSchema0.addSequence((DBSequence) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test8()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog("VY;MSWT?.i4lVa");
      DBSchema dBSchema0 = new DBSchema("VY;MSWT?.i4lVa", dBCatalog0);
      DBPackage dBPackage0 = new DBPackage("", dBSchema0);
      assertNull(dBPackage0.getDoc());
  }

  @Test
  public void test9()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog("VY;MSWT?.i4lVa");
      DBSchema dBSchema0 = new DBSchema("VY;MSWT?.i4lVa", dBCatalog0);
      Database database0 = dBSchema0.getDatabase();
      assertNull(database0);
  }

  @Test
  public void test10()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog("VY;MSWT?.i4lVa");
      DBSchema dBSchema0 = new DBSchema("VY;MSWT?.i4lVa", dBCatalog0);
      List<DBPackage> list0 = dBSchema0.getPackages();
      assertEquals(0, list0.size());
  }

  @Test
  public void test11()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("UNSIGNED_ATTRIBUTE");
      List<DBObject> list0 = dBSchema0.getComponents();
      assertEquals(true, list0.isEmpty());
  }

  @Test
  public void test12()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog("VY;MSWT?.i4lVa");
      DBSchema dBSchema0 = new DBSchema("VY;MSWT?.i4lVa", dBCatalog0);
      DBTable dBTable0 = dBSchema0.getTable("VY;MSWT?.i4lVa");
      assertNull(dBTable0);
  }
}
