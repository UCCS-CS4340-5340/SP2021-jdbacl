/*
 * This file was automatically generated by EvoSuite
 */

package org.databene.jdbacl.model;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.databene.jdbacl.model.DBObject;
import org.databene.jdbacl.model.DBSchema;
import org.databene.jdbacl.model.DBTrigger;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class TestDBTrigger {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("Stayement saloeady cl~sd.");
      DBTrigger dBTrigger0 = new DBTrigger("Stayement saloeady cl~sd.", dBSchema0);
      String string0 = dBTrigger0.getTriggeringEvent();
      assertNull(string0);
  }

  @Test
  public void test1()  throws Throwable  {
      DBTrigger dBTrigger0 = new DBTrigger((String) null, (DBSchema) null);
      dBTrigger0.setTableName((String) null);
      assertNull(dBTrigger0.getColumnName());
  }

  @Test
  public void test2()  throws Throwable  {
      DBTrigger dBTrigger0 = new DBTrigger((String) null, (DBSchema) null);
      dBTrigger0.setReferencingNames((String) null);
      assertNull(dBTrigger0.getTriggeringEvent());
  }

  @Test
  public void test3()  throws Throwable  {
      DBTrigger dBTrigger0 = new DBTrigger((String) null, (DBSchema) null);
      dBTrigger0.setTableOwner((String) null);
      assertNull(dBTrigger0.getReferencingNames());
  }

  @Test
  public void test4()  throws Throwable  {
      DBTrigger dBTrigger0 = new DBTrigger((String) null, (DBSchema) null);
      dBTrigger0.setDescription((String) null);
      assertNull(dBTrigger0.getTriggerBody());
  }

  @Test
  public void test5()  throws Throwable  {
      DBTrigger dBTrigger0 = new DBTrigger("", (DBSchema) null);
      String string0 = dBTrigger0.getActionType();
      assertNull(string0);
  }

  @Test
  public void test6()  throws Throwable  {
      DBTrigger dBTrigger0 = new DBTrigger((String) null, (DBSchema) null);
      dBTrigger0.setColumnName((String) null);
      assertNull(dBTrigger0.getDescription());
  }

  @Test
  public void test7()  throws Throwable  {
      DBTrigger dBTrigger0 = new DBTrigger((String) null, (DBSchema) null);
      dBTrigger0.setWhenClause((String) null);
      assertNull(dBTrigger0.getReferencingNames());
  }

  @Test
  public void test8()  throws Throwable  {
      DBTrigger dBTrigger0 = new DBTrigger("", (DBSchema) null);
      String string0 = dBTrigger0.getDescription();
      assertNull(string0);
  }

  @Test
  public void test9()  throws Throwable  {
      DBTrigger dBTrigger0 = new DBTrigger((String) null, (DBSchema) null);
      String string0 = dBTrigger0.getTriggerType();
      assertNull(string0);
  }

  @Test
  public void test10()  throws Throwable  {
      DBTrigger dBTrigger0 = new DBTrigger("", (DBSchema) null);
      String string0 = dBTrigger0.getColumnName();
      assertNull(string0);
  }

  @Test
  public void test11()  throws Throwable  {
      DBTrigger dBTrigger0 = new DBTrigger("NQ5cGty9!t2Nu8YK$", (DBSchema) null);
      String string0 = dBTrigger0.getStatus();
      assertNull(string0);
  }

  @Test
  public void test12()  throws Throwable  {
      DBTrigger dBTrigger0 = new DBTrigger("NQ5cGty9!t2Nu8YK$", (DBSchema) null);
      String string0 = dBTrigger0.getTableOwner();
      assertNull(string0);
  }

  @Test
  public void test13()  throws Throwable  {
      DBTrigger dBTrigger0 = new DBTrigger("NQ5cGty9!t2Nu8YK$", (DBSchema) null);
      String string0 = dBTrigger0.getTableName();
      assertNull(string0);
  }

  @Test
  public void test14()  throws Throwable  {
      DBTrigger dBTrigger0 = new DBTrigger("", (DBSchema) null);
      String string0 = dBTrigger0.getBaseObjectType();
      assertNull(string0);
  }

  @Test
  public void test15()  throws Throwable  {
      DBTrigger dBTrigger0 = new DBTrigger((String) null, (DBSchema) null);
      String string0 = dBTrigger0.getWhenClause();
      assertNull(string0);
  }

  @Test
  public void test16()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("Stayement saloeady cl~sd.");
      DBTrigger dBTrigger0 = new DBTrigger("Stayement saloeady cl~sd.", dBSchema0);
      String string0 = dBTrigger0.getReferencingNames();
      assertNull(string0);
  }

  @Test
  public void test17()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("Stayement saloeady cl~sd.");
      DBTrigger dBTrigger0 = new DBTrigger("Stayement saloeady cl~sd.", dBSchema0);
      String string0 = dBTrigger0.getTriggerBody();
      assertNull(string0);
  }

  @Test
  public void test18()  throws Throwable  {
      DBTrigger dBTrigger0 = new DBTrigger((String) null, (DBSchema) null);
      assertNotNull(dBTrigger0);
      
      boolean boolean0 = dBTrigger0.isIdentical((DBObject) null);
      assertEquals(false, boolean0);
  }

  @Test
  public void test19()  throws Throwable  {
      DBTrigger dBTrigger0 = new DBTrigger((String) null, (DBSchema) null);
      assertNotNull(dBTrigger0);
      
      dBTrigger0.setStatus("");
      dBTrigger0.setTriggerBody("");
      dBTrigger0.setTriggerType("");
      dBTrigger0.setBaseObjectType("");
      dBTrigger0.setActionType("");
      dBTrigger0.setTriggeringEvent("");
      boolean boolean0 = dBTrigger0.isIdentical((DBObject) dBTrigger0);
      assertEquals(true, boolean0);
  }
}
