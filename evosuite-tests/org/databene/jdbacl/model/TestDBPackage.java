/*
 * This file was automatically generated by EvoSuite
 */

package org.databene.jdbacl.model;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.List;
import org.databene.commons.collection.OrderedNameMap;
import org.databene.jdbacl.model.DBCatalog;
import org.databene.jdbacl.model.DBObject;
import org.databene.jdbacl.model.DBPackage;
import org.databene.jdbacl.model.DBProcedure;
import org.databene.jdbacl.model.DBSchema;
import org.databene.jdbacl.model.DefaultDBTable;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class TestDBPackage {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DBPackage dBPackage0 = new DBPackage("{r,ytjXyD", (DBSchema) null);
      String string0 = dBPackage0.getObjectType();
      assertNull(string0);
  }

  @Test
  public void test1()  throws Throwable  {
      DBPackage dBPackage0 = new DBPackage((String) null, (DBSchema) null);
      String string0 = dBPackage0.getObjectId();
      assertNull(string0);
  }

  @Test
  public void test2()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("[@W? >j", (DBCatalog) null);
      DBPackage dBPackage0 = new DBPackage("[@W? >j", dBSchema0);
      String string0 = dBPackage0.getStatus();
      assertNull(string0);
  }

  @Test
  public void test3()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("[@W? >j", (DBCatalog) null);
      DBPackage dBPackage0 = new DBPackage("[@W? >j", dBSchema0);
      List<DBProcedure> list0 = dBPackage0.getComponents();
      assertEquals(0, list0.size());
  }

  @Test
  public void test4()  throws Throwable  {
      DBPackage dBPackage0 = new DBPackage((String) null, (DBSchema) null);
      String string0 = dBPackage0.getDataObjectId();
      assertNull(string0);
  }

  @Test
  public void test5()  throws Throwable  {
      DBPackage dBPackage0 = new DBPackage((String) null, (DBSchema) null);
      OrderedNameMap<DBProcedure> orderedNameMap0 = new OrderedNameMap<DBProcedure>();
      dBPackage0.setProcedures(orderedNameMap0);
      assertNull(dBPackage0.getObjectId());
  }

  @Test
  public void test6()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("[@W? >j", (DBCatalog) null);
      DBPackage dBPackage0 = new DBPackage("[@W? >j", dBSchema0);
      String string0 = dBPackage0.getSubObjectName();
      assertNull(string0);
  }

  @Test
  public void test7()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("", (DBCatalog) null);
      DBPackage dBPackage0 = new DBPackage("", dBSchema0);
      List<DBProcedure> list0 = dBPackage0.getProcedures();
      assertEquals(true, list0.isEmpty());
  }

  @Test
  public void test8()  throws Throwable  {
      DBPackage dBPackage0 = new DBPackage((String) null, (DBSchema) null);
      DBProcedure dBProcedure0 = new DBProcedure((String) null, dBPackage0);
      assertNull(dBProcedure0.getObjectId());
  }

  @Test
  public void test9()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable((String) null, (DBSchema) null);
      DBPackage dBPackage0 = new DBPackage((String) null, (DBSchema) null);
      assertNotNull(dBPackage0);
      
      boolean boolean0 = dBPackage0.isIdentical((DBObject) defaultDBTable0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test10()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("\u0001\u01D4", (DBCatalog) null);
      DBPackage dBPackage0 = new DBPackage("\u0001\u01D4", dBSchema0);
      boolean boolean0 = dBPackage0.isIdentical((DBObject) dBPackage0);
      assertEquals(true, boolean0);
  }

  @Test
  public void test11()  throws Throwable  {
      DBPackage dBPackage0 = new DBPackage("{r,ytjXyD", (DBSchema) null);
      assertNotNull(dBPackage0);
      
      boolean boolean0 = dBPackage0.isIdentical((DBObject) null);
      assertEquals(false, boolean0);
  }

  @Test
  public void test12()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("[@W? >j", (DBCatalog) null);
      DBPackage dBPackage0 = new DBPackage("[@W? >j", dBSchema0);
      DBPackage dBPackage1 = new DBPackage("[@W? >j", dBSchema0);
      dBPackage0.setSubObjectName("[@W? >j");
      boolean boolean0 = dBPackage1.isIdentical((DBObject) dBPackage0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test13()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("8CP /  i", (DBCatalog) null);
      DBPackage dBPackage0 = new DBPackage("8CP /  i", dBSchema0);
      DBPackage dBPackage1 = new DBPackage("8CP /  i", dBSchema0);
      dBPackage1.setObjectId("8CP /  i");
      boolean boolean0 = dBPackage1.isIdentical((DBObject) dBPackage0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test14()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("", (DBCatalog) null);
      DBPackage dBPackage0 = new DBPackage("", dBSchema0);
      dBPackage0.setObjectId("");
      dBPackage0.setDataObjectId("");
      DBPackage dBPackage1 = new DBPackage("", dBSchema0);
      dBPackage1.setObjectId("");
      boolean boolean0 = dBPackage1.isIdentical((DBObject) dBPackage0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test15()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("wM%RFkWS", (DBCatalog) null);
      DBPackage dBPackage0 = new DBPackage("wM%RFkWS", dBSchema0);
      dBPackage0.setObjectId("wM%RFkWS");
      DBPackage dBPackage1 = new DBPackage("wM%RFkWS", dBSchema0);
      dBPackage1.setObjectType("wM%RFkWS");
      dBPackage1.setObjectId("wM%RFkWS");
      boolean boolean0 = dBPackage1.isIdentical((DBObject) dBPackage0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test16()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("wM%RFkWS", (DBCatalog) null);
      DBPackage dBPackage0 = new DBPackage("wM%RFkWS", dBSchema0);
      dBPackage0.setObjectId("wM%RFkWS");
      DBPackage dBPackage1 = new DBPackage("wM%RFkWS", dBSchema0);
      dBPackage1.setObjectType("wM%RFkWS");
      dBPackage1.setStatus("wM%RFkWS");
      dBPackage1.setObjectId("wM%RFkWS");
      dBPackage0.setObjectType("wM%RFkWS");
      boolean boolean0 = dBPackage1.isIdentical((DBObject) dBPackage0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test17()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("wM%RFkWS", (DBCatalog) null);
      DBPackage dBPackage0 = new DBPackage("wM%RFkWS", dBSchema0);
      dBPackage0.setObjectId("wM%RFkWS");
      DBPackage dBPackage1 = new DBPackage("wM%RFkWS", dBSchema0);
      dBPackage1.setObjectType("wM%RFkWS");
      dBPackage1.setStatus("wM%RFkWS");
      dBPackage1.setObjectId("wM%RFkWS");
      dBPackage0.setObjectType("wM%RFkWS");
      dBPackage0.setStatus("wM%RFkWS");
      boolean boolean0 = dBPackage1.isIdentical((DBObject) dBPackage0);
      assertEquals(true, boolean0);
  }
}
